workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  IMAGE_TAG: "1.0"
  DEV_SERVER_HOST: 3.143.234.9

stages:
  - test 
  - build 
  - deploy 

run_unit_test:
  image: node:22-alpine3.19
  stage: test
  tags:
    - ec2 
    - remote
    - docker
  before_script:
    - cd app 
    - npm install
  script:
    - npm test
  artifacts:
    when: always
    reports:
      junit: app/junit.xml

build_image:
  stage: build
  tags:
    - ec2 
    - shell 
    - remote
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .

push_image:
  stage: build 
  needs:
    - build_image
  tags:
    - ec2 
    - shell 
    - remote
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker push $IMAGE_NAME:$IMAGE_TAG

deploy_to_dev:
  stage: deploy 
  tags:
    - ec2 
    - shell 
    - remote
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ubuntu@$DEV_SERVER_HOST "
        echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY &&
        docker run -d -p 3000:3000 $IMAGE_NAME:$IMAGE_TAG"